# =======================================================
#  Directory Management
# =======================================================

# Project Hosted at
PROJECT_SRC=$(shell pwd)

# Where to find user code.
CONF_DIR = $(PROJECT_SRC)/conf
TEST_DIR = $(PROJECT_SRC)/tests
TEST_BUILD_DIR = $(PROJECT_SRC)/tests/build
BUILD_DIR = $(PROJECT_SRC)/build
SRC_DIR = $(PROJECT_SRC)/src
LINKER_DIR = $(PROJECT_SRC)/ld
INCLUDE_DIR = $(PROJECT_SRC)/include


include $(PROJECT_SRC)/tests/Makefile.include

# =======================================================
#  File Management MCU
# =======================================================
MCU = LPC17xx

#  List of the objects files to be compiled/assembled
OBJECTS_ARM_$(MCU)=startup_$(MCU).o core_cm3.o system_$(MCU).o main_$(MCU).o
LSCRIPT_ARM_$(MCU)= $(LINKER_DIR)/$(MCU)/ldscript_rom_gnu.ld

# =======================================================
#  Build Flags Management MCU
# =======================================================
OPTIMIZATION = 0
DEBUG = -g
#LISTING = -ahls

CPPFLAGS_$(MCU) = -Wall -fno-common -mcpu=cortex-m3 -mthumb -I./ -O$(OPTIMIZATION) $(DEBUG)
CPPFLAGS_$(MCU) += -D__RAM_MODE__=0

LDFLAGS_$(MCU) = -mcpu=cortex-m3 -mthumb -O$(OPTIMIZATION) -nostartfiles -Wl,-Map=$(PROJECT_SRC).map -T$(LSCRIPT_ARM_$(MCU))
ASFLAGS_$(MCU) = $(LISTING) -mcpu=cortex-m3 --defsym RAM_MODE=0

# =======================================================
#  Compiler/Assembler/Linker Management for ARM Cortex-M3
# =======================================================
GCC_$(MCU) = arm-none-eabi-gcc
AS_$(MCU) = arm-none-eabi-as
LD_$(MCU) = arm-none-eabi-ld
OBJCOPY_$(MCU) = arm-none-eabi-objcopy
REMOVE = rm -f
SIZE_$(MCU) = arm-none-eabi-size

# =======================================================
#  Compiler/Assembler/Linker Management for TEST
# =======================================================
# GCC_TEST = arm-none-eabi-gcc
# AS_TEST = arm-none-eabi-as
# LD_TEST = arm-none-eabi-ld
# OBJCOPY_TEST = arm-none-eabi-objcopy
# REMOVE = rm -f
# SIZE_TEST = arm-none-eabi-size


# Creating a standard make file

all:
	gcc main.c -o main


clean:
	$(REMOVE) $(OBJECTS_TEST)
	$(REMOVE) $(BUILDLIB_TEST)
	$(REMOVE) $(OBJECTS_ARM_$(MCU))
	$(REMOVE) main
	$(REMOVE) sample1_unittest